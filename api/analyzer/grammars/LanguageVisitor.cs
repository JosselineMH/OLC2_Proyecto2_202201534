//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./grammars/Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDcl([NotNull] LanguageParser.DclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.dclFuera"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDclFuera([NotNull] LanguageParser.DclFueraContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionExplicita</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionExplicita([NotNull] LanguageParser.DeclaracionExplicitaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionPorDefecto</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionPorDefecto([NotNull] LanguageParser.DeclaracionPorDefectoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSlice</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSlice([NotNull] LanguageParser.DeclaracionSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaracionFuncForanea"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionFuncForanea([NotNull] LanguageParser.DeclaracionFuncForaneaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.tipoFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoFunc([NotNull] LanguageParser.TipoFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceValores</c>
	/// labeled alternative in <see cref="LanguageParser.slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceValores([NotNull] LanguageParser.DeclaracionSliceValoresContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceVacio</c>
	/// labeled alternative in <see cref="LanguageParser.slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceVacio([NotNull] LanguageParser.DeclaracionSliceVacioContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceCopia</c>
	/// labeled alternative in <see cref="LanguageParser.slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceCopia([NotNull] LanguageParser.DeclaracionSliceCopiaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceMultidimensional</c>
	/// labeled alternative in <see cref="LanguageParser.slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceMultidimensional([NotNull] LanguageParser.DeclaracionSliceMultidimensionalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.elementosSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementosSlice([NotNull] LanguageParser.ElementosSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.elementoSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementoSlice([NotNull] LanguageParser.ElementoSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.structDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDecl([NotNull] LanguageParser.StructDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.atributoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtributoStruct([NotNull] LanguageParser.AtributoStructContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStmt([NotNull] LanguageParser.ExprStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrintStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStmt([NotNull] LanguageParser.PrintStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStmt([NotNull] LanguageParser.BlockStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] LanguageParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SwitchStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStmt([NotNull] LanguageParser.SwitchStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForWhileStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForWhileStmt([NotNull] LanguageParser.ForWhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] LanguageParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForRangeStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForRangeStmt([NotNull] LanguageParser.ForRangeStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BreakStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStmt([NotNull] LanguageParser.BreakStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ContinueStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStmt([NotNull] LanguageParser.ContinueStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] LanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.stmtCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtCase([NotNull] LanguageParser.StmtCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.stmtDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtDefault([NotNull] LanguageParser.StmtDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] LanguageParser.ForInitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignSlice([NotNull] LanguageParser.AssignSliceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Callee</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallee([NotNull] LanguageParser.CalleeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceLenFunc</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceLenFunc([NotNull] LanguageParser.SliceLenFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceLiteral</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceLiteral([NotNull] LanguageParser.SliceLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParens([NotNull] LanguageParser.ParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalOr</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOr([NotNull] LanguageParser.LogicalOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalNot</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalNot([NotNull] LanguageParser.LogicalNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructAccess([NotNull] LanguageParser.StructAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulDivMod</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivMod([NotNull] LanguageParser.MulDivModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] LanguageParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EmebbedFuncAtoi</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmebbedFuncAtoi([NotNull] LanguageParser.EmebbedFuncAtoiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] LanguageParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructAssign</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructAssign([NotNull] LanguageParser.StructAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalAnd</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAnd([NotNull] LanguageParser.LogicalAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Equality</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality([NotNull] LanguageParser.EqualityContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceStringFuncJoin</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceStringFuncJoin([NotNull] LanguageParser.SliceStringFuncJoinContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] LanguageParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceAccess</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceAccess([NotNull] LanguageParser.SliceAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructInstancia</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructInstancia([NotNull] LanguageParser.StructInstanciaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSub([NotNull] LanguageParser.AddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignVar</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignVar([NotNull] LanguageParser.AssignVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Relational</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelational([NotNull] LanguageParser.RelationalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceMatrixAccess</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceMatrixAccess([NotNull] LanguageParser.SliceMatrixAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EmebbedFuncParseFloat</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmebbedFuncParseFloat([NotNull] LanguageParser.EmebbedFuncParseFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceFuncIndex</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceFuncIndex([NotNull] LanguageParser.SliceFuncIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Nil</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNil([NotNull] LanguageParser.NilContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] LanguageParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignSliceMultidimensional</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignSliceMultidimensional([NotNull] LanguageParser.AssignSliceMultidimensionalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceAppendFunc</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceAppendFunc([NotNull] LanguageParser.SliceAppendFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EmebbedFuncTypeOf</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmebbedFuncTypeOf([NotNull] LanguageParser.EmebbedFuncTypeOfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegate([NotNull] LanguageParser.NegateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IncrementDecrement</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementDecrement([NotNull] LanguageParser.IncrementDecrementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Rune</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRune([NotNull] LanguageParser.RuneContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.atributoInstancia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtributoInstancia([NotNull] LanguageParser.AtributoInstanciaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall([NotNull] LanguageParser.CallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] LanguageParser.ArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.tipoDeclaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoDeclaracion([NotNull] LanguageParser.TipoDeclaracionContext context);
}
} // namespace analyzer
